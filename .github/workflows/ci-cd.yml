# .github/workflows/ci-cd.yml

name: Pokédex Gui - CI/CD

on:
  push:
    branches:
      - main # Dispara o workflow a cada push na branch main
  workflow_dispatch: {} # Permite execução manual

permissions:
  contents: read # Permite ler o código do repositório

jobs:
  # Job 1: Integração Contínua (Teste e Build)
  test_and_build:
    runs-on: ubuntu-latest

    steps:
      - name: Verifica o código
        uses: actions/checkout@v2

      - name: Instala dependências
        run: npm install

      - name: Executa testes
        run: npm run test

      - name: Build React App
        run: npm run build
        env:
          CI: false # Desabilita o erro de "warnings as errors"

  # Job 2: Implantação Contínua (Deploy)
  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: test_and_build # Este job só roda se "test_and_build" for bem-sucedido

    steps:
      - name: Verifica o código
        uses: actions/checkout@v2

      - name: Instala dependências
        run: npm install
      
      - name: Build React App
        run: npm run build
        env:
          CI: false

      - name: Configure AWS Credentials for Academy
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Deploy CloudFormation Stack (Frontend S3)
        run: |
          aws cloudformation deploy \
            --template-file cloudformation-frontend.yml \
            --stack-name PokedexGuiFrontendStack \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides BucketName=pokedex-gui-frontend-bucket-2025-05-30-2150

      - name: Sync S3 Bucket
        run: |
          # O caminho agora é diretamente 'build/' pois o build foi refeito nesta job
          aws s3 sync ./build/ s3://$(aws cloudformation describe-stacks --stack-name PokedexGuiFrontendStack --query 'Stacks[0].Outputs[?OutputKey==`S3BucketName`].OutputValue' --output text) \
          --delete # --delete remove arquivos que não existem mais no build