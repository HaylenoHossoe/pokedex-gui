# .github/workflows/ci-cd.yml

name: Pokédex Gui - CI/CD Completo

on:
  push:
    branches:
      - containers-ecs
  workflow_dispatch: {}

permissions:
  contents: read # Permite ler o código do repositório
  id-token: write # Adicionar esta permissão para SonarCloud

jobs:
  # Job 1: Integração Contínua (Teste e Build)
  test_and_build:
    runs-on: ubuntu-latest

    steps:
      - name: Verifica o código
        uses: actions/checkout@v2
        with:
          # Fetch all history for SonarQube analysis
          fetch-depth: 0 

      - name: Instala dependências
        run: npm install

#    # --- INÍCIO: INTEGRAÇÃO SONARQUBE CLOUD ---
#      - name: Set up Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: '18' # Verifique a compatibilidade com seu projeto React

#      - name: Run SonarQube Analysis
#        uses: SonarSource/sonarcloud-github-action@v2.2 # AÇÃO OFICIAL PARA SONARCLOUD
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Necessário para a action interagir com o GitHub
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Seu token pessoal do SonarCloud
#        with:
#          projectKey: HaylenoHossoe_pokedex-gui # SEU PROJECT KEY DO SONARCLOUD (CORRETO!)
#          # organization: sua-organizacao-no-sonarcloud # Descomente e preencha se tiver uma organização
#    # --- FIM: INTEGRAÇÃO SONARQUBE CLOUD ---


      - name: Executa testes
        run: npm run test

      
      - name: Build React App
        run: npm run build
        env:
          CI: false

  # Job 2: Implantação Contínua (Deploy)
  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: test_and_build # Este job só roda se "test_and_build" for bem-sucedido

    steps:
      - name: Verifica o código
        uses: actions/checkout@v2

      - name: Instala dependências
        run: npm install
      
      - name: Build React App
        run: npm run build
        env:
          CI: false

      - name: Configure AWS Credentials for Academy
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

    # --- PASSO ANTIGO (DEPLOY S3): COMENTADO/REMOVIDO ---
    # - name: Deploy CloudFormation Stack (Frontend S3)
    #   run: |
    #     aws cloudformation deploy \
    #       --template-file cloudformation-frontend.yml \
    #       --stack-name PokedexGuiFrontendStack \
    #       --capabilities CAPABILITY_IAM \
    #       --parameter-overrides BucketName=pokedex-gui-frontend-bucket-2025-05-30-2150

    # --- PASSO ANTIGO (SYNC S3): REMOVIDO OU COMENTADO ---
    #   - name: Sync S3 Bucket
    #     run: |
    #       aws s3 sync ./build/ s3://$(aws cloudformation describe-stacks --stack-name PokedexGuiFrontendStack --query 'Stacks[0].Outputs[?OutputKey==`S3BucketName`].OutputValue' --output text) \
    #       --delete 
    
    # --- NOVO PASSO: DEPLOY DA INFRA DO ECS/FARGATE ---
      - name: Deploy ECS/Fargate CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --template-file cloudformation-ecs.yml \
            --stack-name PokedexGuiEcsStack \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \ # AJUSTADO AQUI!
            --parameter-overrides \
              VpcId=vpc-0ef104b9a906559fd \ # SEU VPC ID (CORRETO!)
              SubnetIds=subnet-0fc5a99dc1a158475,subnet-096e1bc5f6623b31f # SUAS SUBNET IDs (CORRETO!)
    # --- FIM NOVO PASSO ---